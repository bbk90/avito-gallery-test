{"version":3,"sources":["services/api.js","components/footer/footer.js","components/gallery-item/gallery-item.js","components/gallery/gallery.js","components/loader/loader.js","components/modal-window/modal-window.js","components/app/app.js","index.js"],"names":["GalleryService","_baseUrl","getAllImages","a","fetch","response","json","getExtraData","id","addComment","comment","method","headers","Accept","body","JSON","stringify","Footer","className","GalleryItem","url","choosePhotoHandler","onClick","src","alt","Gallery","photos","map","item","Loader","ModalWindow","closeModal","galleryService","useState","bigPhoto","setBigPhoto","comments","setComments","isLoading","setIsLoading","name","setName","setComment","useEffect","then","data","loader","content","onSubmit","e","status","alert","preventDefault","value","onChange","target","placeholder","type","Date","date","toISOString","replace","text","App","setPhotos","isModal","setIsModal","setId","images","gallery","modal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86c5b910.chunk.js","sourcesContent":["export default class GalleryService {\n    _baseUrl = 'https://boiling-refuge-66454.herokuapp.com'\n\n    getAllImages = async () => {\n        const response = await fetch(`${this._baseUrl}/images`)\n        return response.json()\n    }\n\n    getExtraData = async (id) => {\n        const response = await fetch(`${this._baseUrl}/images/${id}`)\n        return response.json()\n    }\n\n    addComment = async (id, comment) => {\n        const response = await fetch(`${this._baseUrl}/images/${id}/comments`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(comment),\n        })\n        return response\n    }\n}","import React from 'react'\nimport './footer.css'\n\nconst Footer = () => {\n    return (\n        <footer className=\"app-footer\">\n            <p>Ⓒ 2021</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport './gallery-item.css'\n\nconst GalleryItem = ({ url, id, choosePhotoHandler }) => {\n\n    return (\n        <li onClick={() => choosePhotoHandler(id)} className=\"gallery-item\">\n            <img src={url} alt=\"\" />\n        </li>\n    )\n}\n\nexport default GalleryItem","import React from 'react'\nimport GalleryItem from '../gallery-item/gallery-item'\nimport './gallery.css'\n\nconst Gallery = ({ photos, choosePhotoHandler }) => {\n\n    return (\n        <ul className=\"gallery\">\n            {photos.map((item) => {\n                return (\n                    <GalleryItem\n                        key={item.id}\n                        url={item.url}\n                        choosePhotoHandler={choosePhotoHandler}\n                        {...item} />\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default Gallery","import React from 'react'\nimport './loader.css'\n\nconst Loader = () => {\n    return (\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default Loader","import React, { useEffect, useState } from 'react'\nimport GalleryService from '../../services/api'\nimport './modal-window.css'\nimport Loader from '../loader/loader'\n\nconst ModalWindow = ({ id, closeModal }) => {\n\n    const galleryService = new GalleryService()\n\n    const [bigPhoto, setBigPhoto] = useState(null)\n    const [comments, setComments] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [name, setName] = useState('')\n    const [comment, setComment] = useState('')\n\n    useEffect(() => {\n        galleryService.getExtraData(id)\n            .then(data => {\n                setBigPhoto(data.url)\n                setComments(data.comments)\n                setIsLoading(false)\n            })\n    }, [id])\n\n    const onSubmitHandler = (e) => {\n        if (name && comment !== '') {\n            galleryService.addComment(id, { comment, name })\n                .then(data => {\n                    if (data.status === 204) {\n                        alert(\"Ваш комментарий успешно отправлен\")\n                    } else {\n                        alert(\"Произошла ошибка. Комментарий не добавлен!\")\n                    }\n\n                })\n            setName('')\n            setComment('')\n        } else {\n            alert(\"Заполните поля!\")\n        }\n        e.preventDefault()\n    }\n\n    const onNameChange = (e) => {\n        setName(e.target.value)\n    }\n\n    const onCommentChange = (e) => {\n        setComment(e.target.value)\n    }\n\n    const loader = isLoading ? <Loader /> : null\n    const content = !isLoading ?\n        <>\n            <div className=\"modal-leftside\">\n                <img src={bigPhoto} alt=\"\" />\n                <form className=\"modal-form\" onSubmit={onSubmitHandler}>\n                    <input value={name} onChange={onNameChange} placeholder=\"Ваше имя\" type=\"text\" />\n                    <input value={comment} onChange={onCommentChange} placeholder=\"Ваш комментарий\" type=\"text\" />\n                    <button type=\"submit\">Оставить комментарий</button>\n                </form>\n            </div>\n            <div className=\"modal-rightside\">\n                {comments ?\n                    <div className=\"modal-comments\">\n                        {comments.map(comment => {\n                            return (\n                                <div className=\"modal-comment\" key={comment.id}>\n                                    <span>{(\"\" + (new Date(comment.date)).toISOString())\n                                        .replace(/^([^T]+)T(.+)$/, '$1')\n                                        .replace(/^(\\d+)-(\\d+)-(\\d+)$/, '$3.$2.$1')}</span>\n                                    <p>{comment.text}</p>\n                                </div>\n                            )\n                        })}\n                    </div> : null}\n            </div>\n\n        </>\n        : null\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <button onClick={closeModal} className=\"close\">×</button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {loader}\n                        {content}\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalWindow","import React, { useEffect, useState } from 'react'\nimport GalleryService from '../../services/api'\nimport Footer from '../footer/footer'\nimport Gallery from '../gallery/gallery'\nimport Loader from '../loader/loader'\nimport ModalWindow from '../modal-window/modal-window'\nimport './app.css'\n\nconst App = () => {\n\n    const galleryService = new GalleryService()\n\n    const [photos, setPhotos] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [isModal, setIsModal] = useState(false)\n    const [id, setId] = useState(null)\n\n    useEffect(() => {\n        galleryService.getAllImages()\n            .then(images => {\n                setPhotos(images)\n                setIsLoading(false)\n            })\n    }, [])\n\n    const choosePhotoHandler = (id) => {\n        setId(id)\n        setIsModal(true)\n    }\n\n    const closeModal = () => {\n        setIsModal(false)\n    }\n\n    const loader = isLoading ? <Loader /> : null\n    const gallery = !isLoading ? <Gallery\n        photos={photos}\n        choosePhotoHandler={choosePhotoHandler} /> : null\n    const modal = isModal ? <ModalWindow photos={photos} id={id} closeModal={closeModal} /> : null\n\n    return (\n        <div className=\"app\">\n            <h1>TEST APP</h1>\n            {loader}\n            {gallery}\n            {modal}\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/components/app/app'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}